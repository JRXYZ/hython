-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.4 from src/Parser.y
-----------------------------------------------------------------------------

state 22 contains 1 shift/reduce conflicts.
state 40 contains 1 shift/reduce conflicts.
state 56 contains 10 shift/reduce conflicts.
state 57 contains 10 shift/reduce conflicts.
state 58 contains 10 shift/reduce conflicts.
state 59 contains 10 shift/reduce conflicts.
state 60 contains 10 shift/reduce conflicts.
state 61 contains 10 shift/reduce conflicts.
state 62 contains 10 shift/reduce conflicts.
state 63 contains 10 shift/reduce conflicts.
state 64 contains 10 shift/reduce conflicts.
state 65 contains 10 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseTokens -> program                      (0)
	program ->                                         (1)
	program -> statements                              (2)
	stmts -> stmts newline stmt                        (3)
	stmts -> stmts newline                             (4)
	stmts -> stmt                                      (5)
	stmts ->                                           (6)
	stmt -> statement                                  (7)
	statements -> statement                            (8)
	statements -> statements newline statement         (9)
	statements -> statements newline                   (10)
	statements -> newline statements                   (11)
	statements -> newline                              (12)
	statement -> assignment                            (13)
	statement -> assertion                             (14)
	statement -> breakStatement                        (15)
	statement -> classStatement                        (16)
	statement -> continueStatement                     (17)
	statement -> defStatement                          (18)
	statement -> ifStatement                           (19)
	statement -> passStatement                         (20)
	statement -> returnStatement                       (21)
	statement -> whileStatement                        (22)
	statement -> expression                            (23)
	assertion -> assert expressionList                 (24)
	assignment -> identifier "=" expressionList        (25)
	breakStatement -> break                            (26)
	classStatement -> class identifier ":" suite       (27)
	classStatement -> class identifier "(" parameterList ")" suite   (28)
	continueStatement -> continue                      (29)
	defStatement -> def identifier "(" parameterList ")" ":" suite   (30)
	ifStatement -> if expression ":" suite elifClauseList elseClause   (31)
	elifClauseList ->                                  (32)
	elifClauseList -> elifClauses                      (33)
	elifClauses -> elif expression ":" suite           (34)
	elifClauses -> elif expression ":" suite elifClauses   (35)
	elseClause ->                                      (36)
	elseClause -> else ":" suite                       (37)
	passStatement -> pass                              (38)
	returnStatement -> return                          (39)
	returnStatement -> return expressionList           (40)
	whileStatement -> while expression ":" suite       (41)
	expressionList -> expression                       (42)
	expression -> expression "*" expression            (43)
	expression -> expression "/" expression            (44)
	expression -> expression "+" expression            (45)
	expression -> expression "-" expression            (46)
	expression -> expression "==" expression           (47)
	expression -> expression "!=" expression           (48)
	expression -> expression "<" expression            (49)
	expression -> expression "<=" expression           (50)
	expression -> expression ">" expression            (51)
	expression -> expression ">=" expression           (52)
	expression -> primary                              (53)
	suite -> newline indent stmts dedent               (54)
	parameterList ->                                   (55)
	parameterList -> parameters                        (56)
	parameters -> parameter                            (57)
	parameters -> parameter "," parameters             (58)
	parameter -> identifier                            (59)
	atom -> identifier                                 (60)
	atom -> literal                                    (61)
	primary -> atom                                    (62)
	primary -> attributeRef                            (63)
	primary -> call                                    (64)
	attributeRef -> primary "." identifier             (65)
	call -> primary "(" argumentList ")"               (66)
	argumentList ->                                    (67)
	argumentList -> arguments                          (68)
	arguments -> argument                              (69)
	arguments -> argument "," arguments                (70)
	argument -> expression                             (71)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	identifier     { L.Identifier $$ }
	literal        { L.Literal $$ }
	newline        { L.Newline }
	"+"            { L.Punctuation "+" }
	"-"            { L.Punctuation "-" }
	"*"            { L.Punctuation "*" }
	"/"            { L.Punctuation "/" }
	"=="           { L.Punctuation "==" }
	"!="           { L.Punctuation "!=" }
	"<"            { L.Punctuation "<" }
	"<="           { L.Punctuation "<=" }
	">"            { L.Punctuation ">" }
	">="           { L.Punctuation ">=" }
	"."            { L.Punctuation "." }
	"("            { L.Punctuation "(" }
	")"            { L.Punctuation ")" }
	":"            { L.Punctuation ":" }
	","            { L.Punctuation "," }
	"="            { L.Punctuation "=" }
	indent         { L.Indent }
	dedent         { L.Dedent }
	assert         { L.Keyword "assert" }
	break          { L.Keyword "break" }
	class          { L.Keyword "class" }
	continue       { L.Keyword "continue" }
	def            { L.Keyword "def" }
	elif           { L.Keyword "elif" }
	else           { L.Keyword "else" }
	if             { L.Keyword "if" }
	pass           { L.Keyword "pass" }
	return         { L.Keyword "return" }
	while          { L.Keyword "while" }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseTokens rule  0
	program         rules 1, 2
	stmts           rules 3, 4, 5, 6
	stmt            rule  7
	statements      rules 8, 9, 10, 11, 12
	statement       rules 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
	assertion       rule  24
	assignment      rule  25
	breakStatement  rule  26
	classStatement  rules 27, 28
	continueStatement rule  29
	defStatement    rule  30
	ifStatement     rule  31
	elifClauseList  rules 32, 33
	elifClauses     rules 34, 35
	elseClause      rules 36, 37
	passStatement   rule  38
	returnStatement rules 39, 40
	whileStatement  rule  41
	expressionList  rule  42
	expression      rules 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53
	suite           rule  54
	parameterList   rules 55, 56
	parameters      rules 57, 58
	parameter       rule  59
	atom            rules 60, 61
	primary         rules 62, 63, 64
	attributeRef    rule  65
	call            rule  66
	argumentList    rules 67, 68
	arguments       rules 69, 70
	argument        rule  71

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	identifier     shift, and enter state 20
	literal        shift, and enter state 21
	newline        shift, and enter state 22
	assert         shift, and enter state 23
	break          shift, and enter state 24
	class          shift, and enter state 25
	continue       shift, and enter state 26
	def            shift, and enter state 27
	if             shift, and enter state 28
	pass           shift, and enter state 29
	return         shift, and enter state 30
	while          shift, and enter state 31
	%eof           reduce using rule 1

	program        goto state 2
	statements     goto state 3
	statement      goto state 4
	assertion      goto state 5
	assignment     goto state 6
	breakStatement goto state 7
	classStatement goto state 8
	continueStatementgoto state 9
	defStatement   goto state 10
	ifStatement    goto state 11
	passStatement  goto state 12
	returnStatementgoto state 13
	whileStatement goto state 14
	expression     goto state 15
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 1




State 2

	%start_parseTokens -> program .                     (rule 0)

	%eof           accept


State 3

	program -> statements .                             (rule 2)
	statements -> statements . newline statement        (rule 9)
	statements -> statements . newline                  (rule 10)

	newline        shift, and enter state 54
	%eof           reduce using rule 2


State 4

	statements -> statement .                           (rule 8)

	newline        reduce using rule 8
	%eof           reduce using rule 8


State 5

	statement -> assertion .                            (rule 14)

	newline        reduce using rule 14
	dedent         reduce using rule 14
	%eof           reduce using rule 14


State 6

	statement -> assignment .                           (rule 13)

	newline        reduce using rule 13
	dedent         reduce using rule 13
	%eof           reduce using rule 13


State 7

	statement -> breakStatement .                       (rule 15)

	newline        reduce using rule 15
	dedent         reduce using rule 15
	%eof           reduce using rule 15


State 8

	statement -> classStatement .                       (rule 16)

	newline        reduce using rule 16
	dedent         reduce using rule 16
	%eof           reduce using rule 16


State 9

	statement -> continueStatement .                    (rule 17)

	newline        reduce using rule 17
	dedent         reduce using rule 17
	%eof           reduce using rule 17


State 10

	statement -> defStatement .                         (rule 18)

	newline        reduce using rule 18
	dedent         reduce using rule 18
	%eof           reduce using rule 18


State 11

	statement -> ifStatement .                          (rule 19)

	newline        reduce using rule 19
	dedent         reduce using rule 19
	%eof           reduce using rule 19


State 12

	statement -> passStatement .                        (rule 20)

	newline        reduce using rule 20
	dedent         reduce using rule 20
	%eof           reduce using rule 20


State 13

	statement -> returnStatement .                      (rule 21)

	newline        reduce using rule 21
	dedent         reduce using rule 21
	%eof           reduce using rule 21


State 14

	statement -> whileStatement .                       (rule 22)

	newline        reduce using rule 22
	dedent         reduce using rule 22
	%eof           reduce using rule 22


State 15

	statement -> expression .                           (rule 23)
	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	newline        reduce using rule 23
	"+"            shift, and enter state 44
	"-"            shift, and enter state 45
	"*"            shift, and enter state 46
	"/"            shift, and enter state 47
	"=="           shift, and enter state 48
	"!="           shift, and enter state 49
	"<"            shift, and enter state 50
	"<="           shift, and enter state 51
	">"            shift, and enter state 52
	">="           shift, and enter state 53
	dedent         reduce using rule 23
	%eof           reduce using rule 23


State 16

	primary -> atom .                                   (rule 62)

	newline        reduce using rule 62
	"+"            reduce using rule 62
	"-"            reduce using rule 62
	"*"            reduce using rule 62
	"/"            reduce using rule 62
	"=="           reduce using rule 62
	"!="           reduce using rule 62
	"<"            reduce using rule 62
	"<="           reduce using rule 62
	">"            reduce using rule 62
	">="           reduce using rule 62
	"."            reduce using rule 62
	"("            reduce using rule 62
	")"            reduce using rule 62
	":"            reduce using rule 62
	","            reduce using rule 62
	dedent         reduce using rule 62
	%eof           reduce using rule 62


State 17

	expression -> primary .                             (rule 53)
	attributeRef -> primary . "." identifier            (rule 65)
	call -> primary . "(" argumentList ")"              (rule 66)

	newline        reduce using rule 53
	"+"            reduce using rule 53
	"-"            reduce using rule 53
	"*"            reduce using rule 53
	"/"            reduce using rule 53
	"=="           reduce using rule 53
	"!="           reduce using rule 53
	"<"            reduce using rule 53
	"<="           reduce using rule 53
	">"            reduce using rule 53
	">="           reduce using rule 53
	"."            shift, and enter state 42
	"("            shift, and enter state 43
	")"            reduce using rule 53
	":"            reduce using rule 53
	","            reduce using rule 53
	dedent         reduce using rule 53
	%eof           reduce using rule 53


State 18

	primary -> attributeRef .                           (rule 63)

	newline        reduce using rule 63
	"+"            reduce using rule 63
	"-"            reduce using rule 63
	"*"            reduce using rule 63
	"/"            reduce using rule 63
	"=="           reduce using rule 63
	"!="           reduce using rule 63
	"<"            reduce using rule 63
	"<="           reduce using rule 63
	">"            reduce using rule 63
	">="           reduce using rule 63
	"."            reduce using rule 63
	"("            reduce using rule 63
	")"            reduce using rule 63
	":"            reduce using rule 63
	","            reduce using rule 63
	dedent         reduce using rule 63
	%eof           reduce using rule 63


State 19

	primary -> call .                                   (rule 64)

	newline        reduce using rule 64
	"+"            reduce using rule 64
	"-"            reduce using rule 64
	"*"            reduce using rule 64
	"/"            reduce using rule 64
	"=="           reduce using rule 64
	"!="           reduce using rule 64
	"<"            reduce using rule 64
	"<="           reduce using rule 64
	">"            reduce using rule 64
	">="           reduce using rule 64
	"."            reduce using rule 64
	"("            reduce using rule 64
	")"            reduce using rule 64
	":"            reduce using rule 64
	","            reduce using rule 64
	dedent         reduce using rule 64
	%eof           reduce using rule 64


State 20

	assignment -> identifier . "=" expressionList       (rule 25)
	atom -> identifier .                                (rule 60)

	newline        reduce using rule 60
	"+"            reduce using rule 60
	"-"            reduce using rule 60
	"*"            reduce using rule 60
	"/"            reduce using rule 60
	"=="           reduce using rule 60
	"!="           reduce using rule 60
	"<"            reduce using rule 60
	"<="           reduce using rule 60
	">"            reduce using rule 60
	">="           reduce using rule 60
	"."            reduce using rule 60
	"("            reduce using rule 60
	"="            shift, and enter state 41
	dedent         reduce using rule 60
	%eof           reduce using rule 60


State 21

	atom -> literal .                                   (rule 61)

	newline        reduce using rule 61
	"+"            reduce using rule 61
	"-"            reduce using rule 61
	"*"            reduce using rule 61
	"/"            reduce using rule 61
	"=="           reduce using rule 61
	"!="           reduce using rule 61
	"<"            reduce using rule 61
	"<="           reduce using rule 61
	">"            reduce using rule 61
	">="           reduce using rule 61
	"."            reduce using rule 61
	"("            reduce using rule 61
	")"            reduce using rule 61
	":"            reduce using rule 61
	","            reduce using rule 61
	dedent         reduce using rule 61
	%eof           reduce using rule 61


State 22

	statements -> newline . statements                  (rule 11)
	statements -> newline .                             (rule 12)

	identifier     shift, and enter state 20
	literal        shift, and enter state 21
	newline        shift, and enter state 22
			(reduce using rule 12)

	assert         shift, and enter state 23
	break          shift, and enter state 24
	class          shift, and enter state 25
	continue       shift, and enter state 26
	def            shift, and enter state 27
	if             shift, and enter state 28
	pass           shift, and enter state 29
	return         shift, and enter state 30
	while          shift, and enter state 31
	%eof           reduce using rule 12

	statements     goto state 40
	statement      goto state 4
	assertion      goto state 5
	assignment     goto state 6
	breakStatement goto state 7
	classStatement goto state 8
	continueStatementgoto state 9
	defStatement   goto state 10
	ifStatement    goto state 11
	passStatement  goto state 12
	returnStatementgoto state 13
	whileStatement goto state 14
	expression     goto state 15
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 23

	assertion -> assert . expressionList                (rule 24)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expressionList goto state 39
	expression     goto state 35
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 24

	breakStatement -> break .                           (rule 26)

	newline        reduce using rule 26
	dedent         reduce using rule 26
	%eof           reduce using rule 26


State 25

	classStatement -> class . identifier ":" suite      (rule 27)
	classStatement -> class . identifier "(" parameterList ")" suite    (rule 28)

	identifier     shift, and enter state 38


State 26

	continueStatement -> continue .                     (rule 29)

	newline        reduce using rule 29
	dedent         reduce using rule 29
	%eof           reduce using rule 29


State 27

	defStatement -> def . identifier "(" parameterList ")" ":" suite    (rule 30)

	identifier     shift, and enter state 37


State 28

	ifStatement -> if . expression ":" suite elifClauseList elseClause    (rule 31)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 36
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 29

	passStatement -> pass .                             (rule 38)

	newline        reduce using rule 38
	dedent         reduce using rule 38
	%eof           reduce using rule 38


State 30

	returnStatement -> return .                         (rule 39)
	returnStatement -> return . expressionList          (rule 40)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21
	newline        reduce using rule 39
	dedent         reduce using rule 39
	%eof           reduce using rule 39

	expressionList goto state 34
	expression     goto state 35
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 31

	whileStatement -> while . expression ":" suite      (rule 41)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 32
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 32

	whileStatement -> while expression . ":" suite      (rule 41)
	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	"+"            shift, and enter state 44
	"-"            shift, and enter state 45
	"*"            shift, and enter state 46
	"/"            shift, and enter state 47
	"=="           shift, and enter state 48
	"!="           shift, and enter state 49
	"<"            shift, and enter state 50
	"<="           shift, and enter state 51
	">"            shift, and enter state 52
	">="           shift, and enter state 53
	":"            shift, and enter state 76


State 33

	atom -> identifier .                                (rule 60)

	newline        reduce using rule 60
	"+"            reduce using rule 60
	"-"            reduce using rule 60
	"*"            reduce using rule 60
	"/"            reduce using rule 60
	"=="           reduce using rule 60
	"!="           reduce using rule 60
	"<"            reduce using rule 60
	"<="           reduce using rule 60
	">"            reduce using rule 60
	">="           reduce using rule 60
	"."            reduce using rule 60
	"("            reduce using rule 60
	")"            reduce using rule 60
	":"            reduce using rule 60
	","            reduce using rule 60
	dedent         reduce using rule 60
	%eof           reduce using rule 60


State 34

	returnStatement -> return expressionList .          (rule 40)

	newline        reduce using rule 40
	dedent         reduce using rule 40
	%eof           reduce using rule 40


State 35

	expressionList -> expression .                      (rule 42)
	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	newline        reduce using rule 42
	"+"            shift, and enter state 44
	"-"            shift, and enter state 45
	"*"            shift, and enter state 46
	"/"            shift, and enter state 47
	"=="           shift, and enter state 48
	"!="           shift, and enter state 49
	"<"            shift, and enter state 50
	"<="           shift, and enter state 51
	">"            shift, and enter state 52
	">="           shift, and enter state 53
	dedent         reduce using rule 42
	%eof           reduce using rule 42


State 36

	ifStatement -> if expression . ":" suite elifClauseList elseClause    (rule 31)
	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	"+"            shift, and enter state 44
	"-"            shift, and enter state 45
	"*"            shift, and enter state 46
	"/"            shift, and enter state 47
	"=="           shift, and enter state 48
	"!="           shift, and enter state 49
	"<"            shift, and enter state 50
	"<="           shift, and enter state 51
	">"            shift, and enter state 52
	">="           shift, and enter state 53
	":"            shift, and enter state 75


State 37

	defStatement -> def identifier . "(" parameterList ")" ":" suite    (rule 30)

	"("            shift, and enter state 74


State 38

	classStatement -> class identifier . ":" suite      (rule 27)
	classStatement -> class identifier . "(" parameterList ")" suite    (rule 28)

	"("            shift, and enter state 72
	":"            shift, and enter state 73


State 39

	assertion -> assert expressionList .                (rule 24)

	newline        reduce using rule 24
	dedent         reduce using rule 24
	%eof           reduce using rule 24


State 40

	statements -> statements . newline statement        (rule 9)
	statements -> statements . newline                  (rule 10)
	statements -> newline statements .                  (rule 11)

	newline        shift, and enter state 54
			(reduce using rule 11)

	%eof           reduce using rule 11


State 41

	assignment -> identifier "=" . expressionList       (rule 25)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expressionList goto state 71
	expression     goto state 35
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 42

	attributeRef -> primary "." . identifier            (rule 65)

	identifier     shift, and enter state 70


State 43

	call -> primary "(" . argumentList ")"              (rule 66)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21
	")"            reduce using rule 67

	expression     goto state 66
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19
	argumentList   goto state 67
	arguments      goto state 68
	argument       goto state 69

State 44

	expression -> expression "+" . expression           (rule 45)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 65
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 45

	expression -> expression "-" . expression           (rule 46)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 64
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 46

	expression -> expression "*" . expression           (rule 43)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 63
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 47

	expression -> expression "/" . expression           (rule 44)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 62
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 48

	expression -> expression "==" . expression          (rule 47)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 61
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 49

	expression -> expression "!=" . expression          (rule 48)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 60
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 50

	expression -> expression "<" . expression           (rule 49)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 59
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 51

	expression -> expression "<=" . expression          (rule 50)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 58
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 52

	expression -> expression ">" . expression           (rule 51)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 57
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 53

	expression -> expression ">=" . expression          (rule 52)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 56
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 54

	statements -> statements newline . statement        (rule 9)
	statements -> statements newline .                  (rule 10)

	identifier     shift, and enter state 20
	literal        shift, and enter state 21
	newline        reduce using rule 10
	assert         shift, and enter state 23
	break          shift, and enter state 24
	class          shift, and enter state 25
	continue       shift, and enter state 26
	def            shift, and enter state 27
	if             shift, and enter state 28
	pass           shift, and enter state 29
	return         shift, and enter state 30
	while          shift, and enter state 31
	%eof           reduce using rule 10

	statement      goto state 55
	assertion      goto state 5
	assignment     goto state 6
	breakStatement goto state 7
	classStatement goto state 8
	continueStatementgoto state 9
	defStatement   goto state 10
	ifStatement    goto state 11
	passStatement  goto state 12
	returnStatementgoto state 13
	whileStatement goto state 14
	expression     goto state 15
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 55

	statements -> statements newline statement .        (rule 9)

	newline        reduce using rule 9
	%eof           reduce using rule 9


State 56

	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)
	expression -> expression ">=" expression .          (rule 52)

	newline        reduce using rule 52
	"+"            shift, and enter state 44
			(reduce using rule 52)

	"-"            shift, and enter state 45
			(reduce using rule 52)

	"*"            shift, and enter state 46
			(reduce using rule 52)

	"/"            shift, and enter state 47
			(reduce using rule 52)

	"=="           shift, and enter state 48
			(reduce using rule 52)

	"!="           shift, and enter state 49
			(reduce using rule 52)

	"<"            shift, and enter state 50
			(reduce using rule 52)

	"<="           shift, and enter state 51
			(reduce using rule 52)

	">"            shift, and enter state 52
			(reduce using rule 52)

	">="           shift, and enter state 53
			(reduce using rule 52)

	")"            reduce using rule 52
	":"            reduce using rule 52
	","            reduce using rule 52
	dedent         reduce using rule 52
	%eof           reduce using rule 52


State 57

	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression ">" expression .           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	newline        reduce using rule 51
	"+"            shift, and enter state 44
			(reduce using rule 51)

	"-"            shift, and enter state 45
			(reduce using rule 51)

	"*"            shift, and enter state 46
			(reduce using rule 51)

	"/"            shift, and enter state 47
			(reduce using rule 51)

	"=="           shift, and enter state 48
			(reduce using rule 51)

	"!="           shift, and enter state 49
			(reduce using rule 51)

	"<"            shift, and enter state 50
			(reduce using rule 51)

	"<="           shift, and enter state 51
			(reduce using rule 51)

	">"            shift, and enter state 52
			(reduce using rule 51)

	">="           shift, and enter state 53
			(reduce using rule 51)

	")"            reduce using rule 51
	":"            reduce using rule 51
	","            reduce using rule 51
	dedent         reduce using rule 51
	%eof           reduce using rule 51


State 58

	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression "<=" expression .          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	newline        reduce using rule 50
	"+"            shift, and enter state 44
			(reduce using rule 50)

	"-"            shift, and enter state 45
			(reduce using rule 50)

	"*"            shift, and enter state 46
			(reduce using rule 50)

	"/"            shift, and enter state 47
			(reduce using rule 50)

	"=="           shift, and enter state 48
			(reduce using rule 50)

	"!="           shift, and enter state 49
			(reduce using rule 50)

	"<"            shift, and enter state 50
			(reduce using rule 50)

	"<="           shift, and enter state 51
			(reduce using rule 50)

	">"            shift, and enter state 52
			(reduce using rule 50)

	">="           shift, and enter state 53
			(reduce using rule 50)

	")"            reduce using rule 50
	":"            reduce using rule 50
	","            reduce using rule 50
	dedent         reduce using rule 50
	%eof           reduce using rule 50


State 59

	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression "<" expression .           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	newline        reduce using rule 49
	"+"            shift, and enter state 44
			(reduce using rule 49)

	"-"            shift, and enter state 45
			(reduce using rule 49)

	"*"            shift, and enter state 46
			(reduce using rule 49)

	"/"            shift, and enter state 47
			(reduce using rule 49)

	"=="           shift, and enter state 48
			(reduce using rule 49)

	"!="           shift, and enter state 49
			(reduce using rule 49)

	"<"            shift, and enter state 50
			(reduce using rule 49)

	"<="           shift, and enter state 51
			(reduce using rule 49)

	">"            shift, and enter state 52
			(reduce using rule 49)

	">="           shift, and enter state 53
			(reduce using rule 49)

	")"            reduce using rule 49
	":"            reduce using rule 49
	","            reduce using rule 49
	dedent         reduce using rule 49
	%eof           reduce using rule 49


State 60

	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression "!=" expression .          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	newline        reduce using rule 48
	"+"            shift, and enter state 44
			(reduce using rule 48)

	"-"            shift, and enter state 45
			(reduce using rule 48)

	"*"            shift, and enter state 46
			(reduce using rule 48)

	"/"            shift, and enter state 47
			(reduce using rule 48)

	"=="           shift, and enter state 48
			(reduce using rule 48)

	"!="           shift, and enter state 49
			(reduce using rule 48)

	"<"            shift, and enter state 50
			(reduce using rule 48)

	"<="           shift, and enter state 51
			(reduce using rule 48)

	">"            shift, and enter state 52
			(reduce using rule 48)

	">="           shift, and enter state 53
			(reduce using rule 48)

	")"            reduce using rule 48
	":"            reduce using rule 48
	","            reduce using rule 48
	dedent         reduce using rule 48
	%eof           reduce using rule 48


State 61

	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression "==" expression .          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	newline        reduce using rule 47
	"+"            shift, and enter state 44
			(reduce using rule 47)

	"-"            shift, and enter state 45
			(reduce using rule 47)

	"*"            shift, and enter state 46
			(reduce using rule 47)

	"/"            shift, and enter state 47
			(reduce using rule 47)

	"=="           shift, and enter state 48
			(reduce using rule 47)

	"!="           shift, and enter state 49
			(reduce using rule 47)

	"<"            shift, and enter state 50
			(reduce using rule 47)

	"<="           shift, and enter state 51
			(reduce using rule 47)

	">"            shift, and enter state 52
			(reduce using rule 47)

	">="           shift, and enter state 53
			(reduce using rule 47)

	")"            reduce using rule 47
	":"            reduce using rule 47
	","            reduce using rule 47
	dedent         reduce using rule 47
	%eof           reduce using rule 47


State 62

	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression "/" expression .           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	newline        reduce using rule 44
	"+"            shift, and enter state 44
			(reduce using rule 44)

	"-"            shift, and enter state 45
			(reduce using rule 44)

	"*"            shift, and enter state 46
			(reduce using rule 44)

	"/"            shift, and enter state 47
			(reduce using rule 44)

	"=="           shift, and enter state 48
			(reduce using rule 44)

	"!="           shift, and enter state 49
			(reduce using rule 44)

	"<"            shift, and enter state 50
			(reduce using rule 44)

	"<="           shift, and enter state 51
			(reduce using rule 44)

	">"            shift, and enter state 52
			(reduce using rule 44)

	">="           shift, and enter state 53
			(reduce using rule 44)

	")"            reduce using rule 44
	":"            reduce using rule 44
	","            reduce using rule 44
	dedent         reduce using rule 44
	%eof           reduce using rule 44


State 63

	expression -> expression . "*" expression           (rule 43)
	expression -> expression "*" expression .           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	newline        reduce using rule 43
	"+"            shift, and enter state 44
			(reduce using rule 43)

	"-"            shift, and enter state 45
			(reduce using rule 43)

	"*"            shift, and enter state 46
			(reduce using rule 43)

	"/"            shift, and enter state 47
			(reduce using rule 43)

	"=="           shift, and enter state 48
			(reduce using rule 43)

	"!="           shift, and enter state 49
			(reduce using rule 43)

	"<"            shift, and enter state 50
			(reduce using rule 43)

	"<="           shift, and enter state 51
			(reduce using rule 43)

	">"            shift, and enter state 52
			(reduce using rule 43)

	">="           shift, and enter state 53
			(reduce using rule 43)

	")"            reduce using rule 43
	":"            reduce using rule 43
	","            reduce using rule 43
	dedent         reduce using rule 43
	%eof           reduce using rule 43


State 64

	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression "-" expression .           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	newline        reduce using rule 46
	"+"            shift, and enter state 44
			(reduce using rule 46)

	"-"            shift, and enter state 45
			(reduce using rule 46)

	"*"            shift, and enter state 46
			(reduce using rule 46)

	"/"            shift, and enter state 47
			(reduce using rule 46)

	"=="           shift, and enter state 48
			(reduce using rule 46)

	"!="           shift, and enter state 49
			(reduce using rule 46)

	"<"            shift, and enter state 50
			(reduce using rule 46)

	"<="           shift, and enter state 51
			(reduce using rule 46)

	">"            shift, and enter state 52
			(reduce using rule 46)

	">="           shift, and enter state 53
			(reduce using rule 46)

	")"            reduce using rule 46
	":"            reduce using rule 46
	","            reduce using rule 46
	dedent         reduce using rule 46
	%eof           reduce using rule 46


State 65

	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression "+" expression .           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	newline        reduce using rule 45
	"+"            shift, and enter state 44
			(reduce using rule 45)

	"-"            shift, and enter state 45
			(reduce using rule 45)

	"*"            shift, and enter state 46
			(reduce using rule 45)

	"/"            shift, and enter state 47
			(reduce using rule 45)

	"=="           shift, and enter state 48
			(reduce using rule 45)

	"!="           shift, and enter state 49
			(reduce using rule 45)

	"<"            shift, and enter state 50
			(reduce using rule 45)

	"<="           shift, and enter state 51
			(reduce using rule 45)

	">"            shift, and enter state 52
			(reduce using rule 45)

	">="           shift, and enter state 53
			(reduce using rule 45)

	")"            reduce using rule 45
	":"            reduce using rule 45
	","            reduce using rule 45
	dedent         reduce using rule 45
	%eof           reduce using rule 45


State 66

	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)
	argument -> expression .                            (rule 71)

	"+"            shift, and enter state 44
	"-"            shift, and enter state 45
	"*"            shift, and enter state 46
	"/"            shift, and enter state 47
	"=="           shift, and enter state 48
	"!="           shift, and enter state 49
	"<"            shift, and enter state 50
	"<="           shift, and enter state 51
	">"            shift, and enter state 52
	">="           shift, and enter state 53
	")"            reduce using rule 71
	","            reduce using rule 71


State 67

	call -> primary "(" argumentList . ")"              (rule 66)

	")"            shift, and enter state 87


State 68

	argumentList -> arguments .                         (rule 68)

	")"            reduce using rule 68


State 69

	arguments -> argument .                             (rule 69)
	arguments -> argument . "," arguments               (rule 70)

	")"            reduce using rule 69
	","            shift, and enter state 86


State 70

	attributeRef -> primary "." identifier .            (rule 65)

	newline        reduce using rule 65
	"+"            reduce using rule 65
	"-"            reduce using rule 65
	"*"            reduce using rule 65
	"/"            reduce using rule 65
	"=="           reduce using rule 65
	"!="           reduce using rule 65
	"<"            reduce using rule 65
	"<="           reduce using rule 65
	">"            reduce using rule 65
	">="           reduce using rule 65
	"."            reduce using rule 65
	"("            reduce using rule 65
	")"            reduce using rule 65
	":"            reduce using rule 65
	","            reduce using rule 65
	dedent         reduce using rule 65
	%eof           reduce using rule 65


State 71

	assignment -> identifier "=" expressionList .       (rule 25)

	newline        reduce using rule 25
	dedent         reduce using rule 25
	%eof           reduce using rule 25


State 72

	classStatement -> class identifier "(" . parameterList ")" suite    (rule 28)

	identifier     shift, and enter state 83
	")"            reduce using rule 55

	parameterList  goto state 85
	parameters     goto state 81
	parameter      goto state 82

State 73

	classStatement -> class identifier ":" . suite      (rule 27)

	newline        shift, and enter state 78

	suite          goto state 84

State 74

	defStatement -> def identifier "(" . parameterList ")" ":" suite    (rule 30)

	identifier     shift, and enter state 83
	")"            reduce using rule 55

	parameterList  goto state 80
	parameters     goto state 81
	parameter      goto state 82

State 75

	ifStatement -> if expression ":" . suite elifClauseList elseClause    (rule 31)

	newline        shift, and enter state 78

	suite          goto state 79

State 76

	whileStatement -> while expression ":" . suite      (rule 41)

	newline        shift, and enter state 78

	suite          goto state 77

State 77

	whileStatement -> while expression ":" suite .      (rule 41)

	newline        reduce using rule 41
	dedent         reduce using rule 41
	%eof           reduce using rule 41


State 78

	suite -> newline . indent stmts dedent              (rule 54)

	indent         shift, and enter state 95


State 79

	ifStatement -> if expression ":" suite . elifClauseList elseClause    (rule 31)

	newline        reduce using rule 32
	dedent         reduce using rule 32
	elif           shift, and enter state 94
	else           reduce using rule 32
	%eof           reduce using rule 32

	elifClauseList goto state 92
	elifClauses    goto state 93

State 80

	defStatement -> def identifier "(" parameterList . ")" ":" suite    (rule 30)

	")"            shift, and enter state 91


State 81

	parameterList -> parameters .                       (rule 56)

	")"            reduce using rule 56


State 82

	parameters -> parameter .                           (rule 57)
	parameters -> parameter . "," parameters            (rule 58)

	")"            reduce using rule 57
	","            shift, and enter state 90


State 83

	parameter -> identifier .                           (rule 59)

	")"            reduce using rule 59
	","            reduce using rule 59


State 84

	classStatement -> class identifier ":" suite .      (rule 27)

	newline        reduce using rule 27
	dedent         reduce using rule 27
	%eof           reduce using rule 27


State 85

	classStatement -> class identifier "(" parameterList . ")" suite    (rule 28)

	")"            shift, and enter state 89


State 86

	arguments -> argument "," . arguments               (rule 70)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 66
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19
	arguments      goto state 88
	argument       goto state 69

State 87

	call -> primary "(" argumentList ")" .              (rule 66)

	newline        reduce using rule 66
	"+"            reduce using rule 66
	"-"            reduce using rule 66
	"*"            reduce using rule 66
	"/"            reduce using rule 66
	"=="           reduce using rule 66
	"!="           reduce using rule 66
	"<"            reduce using rule 66
	"<="           reduce using rule 66
	">"            reduce using rule 66
	">="           reduce using rule 66
	"."            reduce using rule 66
	"("            reduce using rule 66
	")"            reduce using rule 66
	":"            reduce using rule 66
	","            reduce using rule 66
	dedent         reduce using rule 66
	%eof           reduce using rule 66


State 88

	arguments -> argument "," arguments .               (rule 70)

	")"            reduce using rule 70


State 89

	classStatement -> class identifier "(" parameterList ")" . suite    (rule 28)

	newline        shift, and enter state 78

	suite          goto state 104

State 90

	parameters -> parameter "," . parameters            (rule 58)

	identifier     shift, and enter state 83

	parameters     goto state 103
	parameter      goto state 82

State 91

	defStatement -> def identifier "(" parameterList ")" . ":" suite    (rule 30)

	":"            shift, and enter state 102


State 92

	ifStatement -> if expression ":" suite elifClauseList . elseClause    (rule 31)

	newline        reduce using rule 36
	dedent         reduce using rule 36
	else           shift, and enter state 101
	%eof           reduce using rule 36

	elseClause     goto state 100

State 93

	elifClauseList -> elifClauses .                     (rule 33)

	newline        reduce using rule 33
	dedent         reduce using rule 33
	else           reduce using rule 33
	%eof           reduce using rule 33


State 94

	elifClauses -> elif . expression ":" suite          (rule 34)
	elifClauses -> elif . expression ":" suite elifClauses    (rule 35)

	identifier     shift, and enter state 33
	literal        shift, and enter state 21

	expression     goto state 99
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 95

	suite -> newline indent . stmts dedent              (rule 54)

	identifier     shift, and enter state 20
	literal        shift, and enter state 21
	newline        reduce using rule 6
	dedent         reduce using rule 6
	assert         shift, and enter state 23
	break          shift, and enter state 24
	class          shift, and enter state 25
	continue       shift, and enter state 26
	def            shift, and enter state 27
	if             shift, and enter state 28
	pass           shift, and enter state 29
	return         shift, and enter state 30
	while          shift, and enter state 31

	stmts          goto state 96
	stmt           goto state 97
	statement      goto state 98
	assertion      goto state 5
	assignment     goto state 6
	breakStatement goto state 7
	classStatement goto state 8
	continueStatementgoto state 9
	defStatement   goto state 10
	ifStatement    goto state 11
	passStatement  goto state 12
	returnStatementgoto state 13
	whileStatement goto state 14
	expression     goto state 15
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 96

	stmts -> stmts . newline stmt                       (rule 3)
	stmts -> stmts . newline                            (rule 4)
	suite -> newline indent stmts . dedent              (rule 54)

	newline        shift, and enter state 108
	dedent         shift, and enter state 109


State 97

	stmts -> stmt .                                     (rule 5)

	newline        reduce using rule 5
	dedent         reduce using rule 5


State 98

	stmt -> statement .                                 (rule 7)

	newline        reduce using rule 7
	dedent         reduce using rule 7


State 99

	elifClauses -> elif expression . ":" suite          (rule 34)
	elifClauses -> elif expression . ":" suite elifClauses    (rule 35)
	expression -> expression . "*" expression           (rule 43)
	expression -> expression . "/" expression           (rule 44)
	expression -> expression . "+" expression           (rule 45)
	expression -> expression . "-" expression           (rule 46)
	expression -> expression . "==" expression          (rule 47)
	expression -> expression . "!=" expression          (rule 48)
	expression -> expression . "<" expression           (rule 49)
	expression -> expression . "<=" expression          (rule 50)
	expression -> expression . ">" expression           (rule 51)
	expression -> expression . ">=" expression          (rule 52)

	"+"            shift, and enter state 44
	"-"            shift, and enter state 45
	"*"            shift, and enter state 46
	"/"            shift, and enter state 47
	"=="           shift, and enter state 48
	"!="           shift, and enter state 49
	"<"            shift, and enter state 50
	"<="           shift, and enter state 51
	">"            shift, and enter state 52
	">="           shift, and enter state 53
	":"            shift, and enter state 107


State 100

	ifStatement -> if expression ":" suite elifClauseList elseClause .    (rule 31)

	newline        reduce using rule 31
	dedent         reduce using rule 31
	%eof           reduce using rule 31


State 101

	elseClause -> else . ":" suite                      (rule 37)

	":"            shift, and enter state 106


State 102

	defStatement -> def identifier "(" parameterList ")" ":" . suite    (rule 30)

	newline        shift, and enter state 78

	suite          goto state 105

State 103

	parameters -> parameter "," parameters .            (rule 58)

	")"            reduce using rule 58


State 104

	classStatement -> class identifier "(" parameterList ")" suite .    (rule 28)

	newline        reduce using rule 28
	dedent         reduce using rule 28
	%eof           reduce using rule 28


State 105

	defStatement -> def identifier "(" parameterList ")" ":" suite .    (rule 30)

	newline        reduce using rule 30
	dedent         reduce using rule 30
	%eof           reduce using rule 30


State 106

	elseClause -> else ":" . suite                      (rule 37)

	newline        shift, and enter state 78

	suite          goto state 112

State 107

	elifClauses -> elif expression ":" . suite          (rule 34)
	elifClauses -> elif expression ":" . suite elifClauses    (rule 35)

	newline        shift, and enter state 78

	suite          goto state 111

State 108

	stmts -> stmts newline . stmt                       (rule 3)
	stmts -> stmts newline .                            (rule 4)

	identifier     shift, and enter state 20
	literal        shift, and enter state 21
	newline        reduce using rule 4
	dedent         reduce using rule 4
	assert         shift, and enter state 23
	break          shift, and enter state 24
	class          shift, and enter state 25
	continue       shift, and enter state 26
	def            shift, and enter state 27
	if             shift, and enter state 28
	pass           shift, and enter state 29
	return         shift, and enter state 30
	while          shift, and enter state 31

	stmt           goto state 110
	statement      goto state 98
	assertion      goto state 5
	assignment     goto state 6
	breakStatement goto state 7
	classStatement goto state 8
	continueStatementgoto state 9
	defStatement   goto state 10
	ifStatement    goto state 11
	passStatement  goto state 12
	returnStatementgoto state 13
	whileStatement goto state 14
	expression     goto state 15
	atom           goto state 16
	primary        goto state 17
	attributeRef   goto state 18
	call           goto state 19

State 109

	suite -> newline indent stmts dedent .              (rule 54)

	newline        reduce using rule 54
	dedent         reduce using rule 54
	elif           reduce using rule 54
	else           reduce using rule 54
	%eof           reduce using rule 54


State 110

	stmts -> stmts newline stmt .                       (rule 3)

	newline        reduce using rule 3
	dedent         reduce using rule 3


State 111

	elifClauses -> elif expression ":" suite .          (rule 34)
	elifClauses -> elif expression ":" suite . elifClauses    (rule 35)

	newline        reduce using rule 34
	dedent         reduce using rule 34
	elif           shift, and enter state 94
	else           reduce using rule 34
	%eof           reduce using rule 34

	elifClauses    goto state 113

State 112

	elseClause -> else ":" suite .                      (rule 37)

	newline        reduce using rule 37
	dedent         reduce using rule 37
	%eof           reduce using rule 37


State 113

	elifClauses -> elif expression ":" suite elifClauses .    (rule 35)

	newline        reduce using rule 35
	dedent         reduce using rule 35
	else           reduce using rule 35
	%eof           reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 72
Number of terminals: 32
Number of non-terminals: 32
Number of states: 114
